# Copyright 2025 The BrightEyes Authors
# Use of this source code is governed by a GPL 3.0 license that can be
# found in the copyright file.

name: BrightEyes CI

on:
  push:
    branches: [ feature/add-ci-support ]

jobs:

  build-ubuntu:
    name: Ubuntu + DOSBox/BCC + GCC
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Extract Borland C++ installation from Docker image
        run: |
          CTNR=$(docker create ghcr.io/newproggie/bcc-dosbox:1.0)
          docker cp ${CTNR}:/root/.dosbox/drive_c/BCC31 drive_c/
          docker rm ${CTNR}
          ls -laH drive_c/BCC31

      - name: Install native build tools
        run: |
          sudo apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
            dosbox gcc make zip unzip libsdl2-dev libsdl2-mixer-dev

      - name: Host build (GCC)
        working-directory: src/gen
        run: |
          export CFLAGS="-Og -g -fno-asm -fopenmp -Wall -Wextra $(sdl2-config --cflags)"
          make -f Makefile_old clean
          make -f Makefile_old CFLAGS="${CFLAGS}"
          test -f ngen_gcc

      - name: Upload host binary
        uses: actions/upload-artifact@v4
        with:
          name: bright-eyes-linux
          path: src/gen/ngen_gcc

      - name: DOS build (BCC)
        working-directory: src/gen_dos
        run: |
          ./tools/build.sh

      - name: Upload DOS binary
        uses: actions/upload-artifact@v4
        with:
          name: bright-eyes-dos
          path: ${{ github.workspace }}/src/gen_dos/build/*.EXE

      - name: Package all binaries
        if: ${{ success() }}
        run: |
          zip -j release.zip \
            src/gen/ngen_gcc \
            src/gen_dos/NGEN.EXE \
            src/gen_dos/build/*.EXE
        shell: bash

      - name: Upload release ZIP
        if: ${{ success() }}
        uses: actions/upload-artifact@v4
        with:
          name: bright-eyes-release
          path: release.zip

  build-macos:
    name: macOS native build
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install build tools
        run: |
          brew install make llvm libomp zip sdl2 sdl2_mixer

      - name: Put Homebrew LLVM on PATH
        run: echo "/opt/homebrew/opt/llvm/bin" >> "$GITHUB_PATH"

      - name: Host build (Clang)
        working-directory: src/gen
        run: |
          export CFLAGS_BASE="-Og -g -fno-asm -fopenmp -Wall -Wextra"
          export SDL2_CFLAGS="$(sdl2-config --cflags)"
          export OMP_LDFLAGS="-L/opt/homebrew/opt/libomp/lib"
          export OMP_CFLAGS="-I/opt/homebrew/opt/libomp/include"
          export MIXER_CFLAGS="$(pkg-config --cflags SDL2_mixer)"
          export MIXER_LIBS="-L/opt/homebrew/lib"
          export CFLAGS="$CFLAGS_BASE $SDL2_CFLAGS $OMP_CFLAGS $MIXER_CFLAGS $MIXER_LIBS"
          export LDFLAGS="$(sdl2-config --libs) $(pkg-config --libs SDL2_mixer) $OMP_LDFLAGS"

          export CC=clang
          which clang

          make -f Makefile_old clean
          make -f Makefile_old CC=$CC CFLAGS="$CFLAGS_BASE $CFLAGS" LDFLAGS="$LDFLAGS"
          test -f ngen_clang

      - name: Upload macOS binary
        uses: actions/upload-artifact@v4
        with:
          name: bright-eyes-macos
          path: src/gen/ngen_clang
